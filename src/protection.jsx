import { useEffect, useState } from 'react';
import { fetchApi } from './redux/fetch';
import { Header } from './parts/header';
import { Footer } from './parts/footer';
import { useDispatch } from 'react-redux';
import { refreshAccessToken } from './redux/slices/refreshTokenSlice';

function Protected() {
  const [msg, setMsg] = useState('');
  const dispatch = useDispatch();

  useEffect(() => {
    const fetchProtected = async () => {
      try {
        const data = await fetchApi('/api/protected', 'GET');
        setMsg(data.message);
      } catch (err) {
        console.log('‚ùå Access token –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å...');

        // üëâ –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å access_token
        try {
          const action = await dispatch(refreshAccessToken());

          // –ï—Å–ª–∏ refresh –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ:
          if (refreshAccessToken.fulfilled.match(action)) {
            console.log('‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª—ë–Ω, –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å');
            const data = await fetchApi('/api/protected', 'GET');
            setMsg(data.message);
          } else {
            setMsg('‚ùå –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –í–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
          }
        } catch (refreshErr) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:', refreshErr);
          setMsg('‚ùå –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –í–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
        }
      }
    };

    fetchProtected();
  }, [dispatch]);

  return (
        <>
            <Header/> 
            <div className='container'>{msg}</div>;
            <Footer/>
        </>
    )
          
}

export default Protected;
